/**
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.finnhub);
  }
}(this, function(expect, finnhub) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new finnhub.CompanyProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompanyProfile', function() {
    it('should create an instance of CompanyProfile', function() {
      // uncomment below and update the code to test CompanyProfile
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be.a(finnhub.CompanyProfile);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property cusip (base name: "cusip")', function() {
      // uncomment below and update the code to test the property cusip
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property sedol (base name: "sedol")', function() {
      // uncomment below and update the code to test the property sedol
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property exchange (base name: "exchange")', function() {
      // uncomment below and update the code to test the property exchange
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property ggroup (base name: "ggroup")', function() {
      // uncomment below and update the code to test the property ggroup
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property gind (base name: "gind")', function() {
      // uncomment below and update the code to test the property gind
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property gsector (base name: "gsector")', function() {
      // uncomment below and update the code to test the property gsector
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property gsubind (base name: "gsubind")', function() {
      // uncomment below and update the code to test the property gsubind
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property isin (base name: "isin")', function() {
      // uncomment below and update the code to test the property isin
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property naicsNationalIndustry (base name: "naicsNationalIndustry")', function() {
      // uncomment below and update the code to test the property naicsNationalIndustry
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property naics (base name: "naics")', function() {
      // uncomment below and update the code to test the property naics
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property naicsSector (base name: "naicsSector")', function() {
      // uncomment below and update the code to test the property naicsSector
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property naicsSubsector (base name: "naicsSubsector")', function() {
      // uncomment below and update the code to test the property naicsSubsector
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property ticker (base name: "ticker")', function() {
      // uncomment below and update the code to test the property ticker
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property weburl (base name: "weburl")', function() {
      // uncomment below and update the code to test the property weburl
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property ipo (base name: "ipo")', function() {
      // uncomment below and update the code to test the property ipo
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property marketCapitalization (base name: "marketCapitalization")', function() {
      // uncomment below and update the code to test the property marketCapitalization
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property shareOutstanding (base name: "shareOutstanding")', function() {
      // uncomment below and update the code to test the property shareOutstanding
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property employeeTotal (base name: "employeeTotal")', function() {
      // uncomment below and update the code to test the property employeeTotal
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

    it('should have the property finnhubIndustry (base name: "finnhubIndustry")', function() {
      // uncomment below and update the code to test the property finnhubIndustry
      //var instane = new finnhub.CompanyProfile();
      //expect(instance).to.be();
    });

  });

}));
