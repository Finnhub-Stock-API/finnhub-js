/**
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LobbyingData model module.
 * @module model/LobbyingData
 * @version 1.2.17
 */
class LobbyingData {
    /**
     * Constructs a new <code>LobbyingData</code>.
     * @alias module:model/LobbyingData
     */
    constructor() { 
        
        LobbyingData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LobbyingData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LobbyingData} obj Optional instance to populate.
     * @return {module:model/LobbyingData} The populated <code>LobbyingData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LobbyingData();

            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
            if (data.hasOwnProperty('income')) {
                obj['income'] = ApiClient.convertToType(data['income'], 'Number');
            }
            if (data.hasOwnProperty('expenses')) {
                obj['expenses'] = ApiClient.convertToType(data['expenses'], 'Number');
            }
            if (data.hasOwnProperty('documentUrl')) {
                obj['documentUrl'] = ApiClient.convertToType(data['documentUrl'], 'String');
            }
            if (data.hasOwnProperty('postedName')) {
                obj['postedName'] = ApiClient.convertToType(data['postedName'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('registrantId')) {
                obj['registrantId'] = ApiClient.convertToType(data['registrantId'], 'String');
            }
            if (data.hasOwnProperty('senateId')) {
                obj['senateId'] = ApiClient.convertToType(data['senateId'], 'String');
            }
            if (data.hasOwnProperty('houseregistrantId')) {
                obj['houseregistrantId'] = ApiClient.convertToType(data['houseregistrantId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Symbol.
 * @member {String} symbol
 */
LobbyingData.prototype['symbol'] = undefined;

/**
 * Company's name.
 * @member {String} name
 */
LobbyingData.prototype['name'] = undefined;

/**
 * Description.
 * @member {String} description
 */
LobbyingData.prototype['description'] = undefined;

/**
 * Country.
 * @member {String} country
 */
LobbyingData.prototype['country'] = undefined;

/**
 * Year.
 * @member {Number} year
 */
LobbyingData.prototype['year'] = undefined;

/**
 * Period.
 * @member {String} period
 */
LobbyingData.prototype['period'] = undefined;

/**
 * Income reported by lobbying firms.
 * @member {Number} income
 */
LobbyingData.prototype['income'] = undefined;

/**
 * Expenses reported by the company.
 * @member {Number} expenses
 */
LobbyingData.prototype['expenses'] = undefined;

/**
 * Document's URL.
 * @member {String} documentUrl
 */
LobbyingData.prototype['documentUrl'] = undefined;

/**
 * Posted name.
 * @member {String} postedName
 */
LobbyingData.prototype['postedName'] = undefined;

/**
 * Date.
 * @member {String} date
 */
LobbyingData.prototype['date'] = undefined;

/**
 * Client ID.
 * @member {String} clientId
 */
LobbyingData.prototype['clientId'] = undefined;

/**
 * Registrant ID.
 * @member {String} registrantId
 */
LobbyingData.prototype['registrantId'] = undefined;

/**
 * Senate ID.
 * @member {String} senateId
 */
LobbyingData.prototype['senateId'] = undefined;

/**
 * House registrant ID.
 * @member {String} houseregistrantId
 */
LobbyingData.prototype['houseregistrantId'] = undefined;






export default LobbyingData;

