/**
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentResponse from './DocumentResponse';

/**
 * The InFilingResponse model module.
 * @module model/InFilingResponse
 * @version 1.2.19
 */
class InFilingResponse {
    /**
     * Constructs a new <code>InFilingResponse</code>.
     * @alias module:model/InFilingResponse
     */
    constructor() { 
        
        InFilingResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InFilingResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InFilingResponse} obj Optional instance to populate.
     * @return {module:model/InFilingResponse} The populated <code>InFilingResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InFilingResponse();

            if (data.hasOwnProperty('filingId')) {
                obj['filingId'] = ApiClient.convertToType(data['filingId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('filerId')) {
                obj['filerId'] = ApiClient.convertToType(data['filerId'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('acceptanceDate')) {
                obj['acceptanceDate'] = ApiClient.convertToType(data['acceptanceDate'], 'String');
            }
            if (data.hasOwnProperty('filedDate')) {
                obj['filedDate'] = ApiClient.convertToType(data['filedDate'], 'String');
            }
            if (data.hasOwnProperty('reportDate')) {
                obj['reportDate'] = ApiClient.convertToType(data['reportDate'], 'String');
            }
            if (data.hasOwnProperty('form')) {
                obj['form'] = ApiClient.convertToType(data['form'], 'String');
            }
            if (data.hasOwnProperty('amend')) {
                obj['amend'] = ApiClient.convertToType(data['amend'], 'Boolean');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('pageCount')) {
                obj['pageCount'] = ApiClient.convertToType(data['pageCount'], 'Number');
            }
            if (data.hasOwnProperty('documentCount')) {
                obj['documentCount'] = ApiClient.convertToType(data['documentCount'], 'Number');
            }
            if (data.hasOwnProperty('documents')) {
                obj['documents'] = ApiClient.convertToType(data['documents'], [DocumentResponse]);
            }
        }
        return obj;
    }


}

/**
 * Filing Id in Alpharesearch platform
 * @member {String} filingId
 */
InFilingResponse.prototype['filingId'] = undefined;

/**
 * Filing title
 * @member {String} title
 */
InFilingResponse.prototype['title'] = undefined;

/**
 * Id of the entity submitted the filing
 * @member {String} filerId
 */
InFilingResponse.prototype['filerId'] = undefined;

/**
 * List of symbol associate with this filing
 * @member {Object} symbol
 */
InFilingResponse.prototype['symbol'] = undefined;

/**
 * Filer name
 * @member {String} name
 */
InFilingResponse.prototype['name'] = undefined;

/**
 * Date the filing is submitted.
 * @member {String} acceptanceDate
 */
InFilingResponse.prototype['acceptanceDate'] = undefined;

/**
 * Date the filing is make available to the public
 * @member {String} filedDate
 */
InFilingResponse.prototype['filedDate'] = undefined;

/**
 * Date as which the filing is reported
 * @member {String} reportDate
 */
InFilingResponse.prototype['reportDate'] = undefined;

/**
 * Filing Form
 * @member {String} form
 */
InFilingResponse.prototype['form'] = undefined;

/**
 * Amendment
 * @member {Boolean} amend
 */
InFilingResponse.prototype['amend'] = undefined;

/**
 * Filing Source
 * @member {String} source
 */
InFilingResponse.prototype['source'] = undefined;

/**
 * Estimate number of page when printing
 * @member {Number} pageCount
 */
InFilingResponse.prototype['pageCount'] = undefined;

/**
 * Number of document in this filing
 * @member {Number} documentCount
 */
InFilingResponse.prototype['documentCount'] = undefined;

/**
 * Document for this filing.
 * @member {Array.<module:model/DocumentResponse>} documents
 */
InFilingResponse.prototype['documents'] = undefined;






export default InFilingResponse;

