/**
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CryptoProfile model module.
 * @module model/CryptoProfile
 * @version 1.2.13
 */
class CryptoProfile {
    /**
     * Constructs a new <code>CryptoProfile</code>.
     * @alias module:model/CryptoProfile
     */
    constructor() { 
        
        CryptoProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CryptoProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CryptoProfile} obj Optional instance to populate.
     * @return {module:model/CryptoProfile} The populated <code>CryptoProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CryptoProfile();

            if (data.hasOwnProperty('longName')) {
                obj['longName'] = ApiClient.convertToType(data['longName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('marketCap')) {
                obj['marketCap'] = ApiClient.convertToType(data['marketCap'], 'Number');
            }
            if (data.hasOwnProperty('totalSupply')) {
                obj['totalSupply'] = ApiClient.convertToType(data['totalSupply'], 'Number');
            }
            if (data.hasOwnProperty('maxSupply')) {
                obj['maxSupply'] = ApiClient.convertToType(data['maxSupply'], 'Number');
            }
            if (data.hasOwnProperty('circulatingSupply')) {
                obj['circulatingSupply'] = ApiClient.convertToType(data['circulatingSupply'], 'Number');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('launchDate')) {
                obj['launchDate'] = ApiClient.convertToType(data['launchDate'], 'String');
            }
            if (data.hasOwnProperty('proofType')) {
                obj['proofType'] = ApiClient.convertToType(data['proofType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Long name.
 * @member {String} longName
 */
CryptoProfile.prototype['longName'] = undefined;

/**
 * Name.
 * @member {String} name
 */
CryptoProfile.prototype['name'] = undefined;

/**
 * Description.
 * @member {String} description
 */
CryptoProfile.prototype['description'] = undefined;

/**
 * Project's website.
 * @member {String} website
 */
CryptoProfile.prototype['website'] = undefined;

/**
 * Market capitalization.
 * @member {Number} marketCap
 */
CryptoProfile.prototype['marketCap'] = undefined;

/**
 * Total supply.
 * @member {Number} totalSupply
 */
CryptoProfile.prototype['totalSupply'] = undefined;

/**
 * Max supply.
 * @member {Number} maxSupply
 */
CryptoProfile.prototype['maxSupply'] = undefined;

/**
 * Circulating supply.
 * @member {Number} circulatingSupply
 */
CryptoProfile.prototype['circulatingSupply'] = undefined;

/**
 * Logo image.
 * @member {String} logo
 */
CryptoProfile.prototype['logo'] = undefined;

/**
 * Launch date.
 * @member {String} launchDate
 */
CryptoProfile.prototype['launchDate'] = undefined;

/**
 * Proof type.
 * @member {String} proofType
 */
CryptoProfile.prototype['proofType'] = undefined;






export default CryptoProfile;

