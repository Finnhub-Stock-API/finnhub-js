/**
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstitutionalPortfolioInfo model module.
 * @module model/InstitutionalPortfolioInfo
 * @version 1.2.16
 */
class InstitutionalPortfolioInfo {
    /**
     * Constructs a new <code>InstitutionalPortfolioInfo</code>.
     * @alias module:model/InstitutionalPortfolioInfo
     */
    constructor() { 
        
        InstitutionalPortfolioInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstitutionalPortfolioInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstitutionalPortfolioInfo} obj Optional instance to populate.
     * @return {module:model/InstitutionalPortfolioInfo} The populated <code>InstitutionalPortfolioInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstitutionalPortfolioInfo();

            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('cusip')) {
                obj['cusip'] = ApiClient.convertToType(data['cusip'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('putCall')) {
                obj['putCall'] = ApiClient.convertToType(data['putCall'], 'String');
            }
            if (data.hasOwnProperty('change')) {
                obj['change'] = ApiClient.convertToType(data['change'], 'Number');
            }
            if (data.hasOwnProperty('noVoting')) {
                obj['noVoting'] = ApiClient.convertToType(data['noVoting'], 'Number');
            }
            if (data.hasOwnProperty('percentage')) {
                obj['percentage'] = ApiClient.convertToType(data['percentage'], 'Number');
            }
            if (data.hasOwnProperty('share')) {
                obj['share'] = ApiClient.convertToType(data['share'], 'Number');
            }
            if (data.hasOwnProperty('sharedVoting')) {
                obj['sharedVoting'] = ApiClient.convertToType(data['sharedVoting'], 'Number');
            }
            if (data.hasOwnProperty('soleVoting')) {
                obj['soleVoting'] = ApiClient.convertToType(data['soleVoting'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Symbol.
 * @member {String} symbol
 */
InstitutionalPortfolioInfo.prototype['symbol'] = undefined;

/**
 * CUSIP.
 * @member {String} cusip
 */
InstitutionalPortfolioInfo.prototype['cusip'] = undefined;

/**
 * Position's name.
 * @member {String} name
 */
InstitutionalPortfolioInfo.prototype['name'] = undefined;

/**
 * <code>put</code> or <code>call</code> for options.
 * @member {String} putCall
 */
InstitutionalPortfolioInfo.prototype['putCall'] = undefined;

/**
 * Number of shares change.
 * @member {Number} change
 */
InstitutionalPortfolioInfo.prototype['change'] = undefined;

/**
 * Number of shares with no voting rights.
 * @member {Number} noVoting
 */
InstitutionalPortfolioInfo.prototype['noVoting'] = undefined;

/**
 * Percentage of portfolio.
 * @member {Number} percentage
 */
InstitutionalPortfolioInfo.prototype['percentage'] = undefined;

/**
 * Number of shares.
 * @member {Number} share
 */
InstitutionalPortfolioInfo.prototype['share'] = undefined;

/**
 * Number of shares with shared voting rights.
 * @member {Number} sharedVoting
 */
InstitutionalPortfolioInfo.prototype['sharedVoting'] = undefined;

/**
 * Number of shares with sole voting rights.
 * @member {Number} soleVoting
 */
InstitutionalPortfolioInfo.prototype['soleVoting'] = undefined;

/**
 * Position value.
 * @member {Number} value
 */
InstitutionalPortfolioInfo.prototype['value'] = undefined;






export default InstitutionalPortfolioInfo;

